\paragraph{} En esta secci\'on realizamos una aplicaci\'n que muestre el contenido del i-nodo de un archivo cuyo $\$HOME/nombre$ es pasada como par\'ametro.

\subsection{Arquitectura} 

\paragraph{} Para realizar esta aplicaci\'on definimos el m\'etodo $datosINodo.c$ en el directorio $ /usr/tp/15$, este m\'etodo se encargara de mostrar la informaci\'on del i-nodo de un archivo del que recibimos su ruta completa. El ejecutable de la aplicaci\'on se encuentra tambi\'en en el mismo directorio con el nombre $datosINodo$ y su formato de entrada es $ ./datosINodo \$HOME/nombre$.

\subsection{Algor√≠tmo}

\paragraph{} El algoritmo verifica primero que la cantidad de parametros recibida sea uno, si no es asi mostrara el siguiente mensaje ''Error: el formato de entrada es ./datosINodo \$HOME/nombreArchivo''. Si la cantidad de parametros es uno este sera la ruta completa del archivo, una vez que tenemos la ruta completa del archivo debemos verificar que este exista. Si existe muestra la informacion del i-nodo del archivo y sino nos muestra el siguiente mensaje El archivo pasado como paramtero no existe''. La informacion que vamos a mostrar de el i-nodo de un archivo es la siguiente:
\begin{itemize}
	\item Ruta completa del archivo
	\item Numero de dispositivo
	\item Numero de i-nodo
	\item Cantidad de links
	\item ID del propietario
	\item ID del grupo del propietario
	\item Tamanio del archivo
	\item Tipo de archivo	
	\item Permisos
		\begin{itemize}
	      		\item Para el propietario
	      		\item Para el grupo
	      		\item Para otros
		\end{itemize}
	\item Ultima fecha modificacion
	\item Fecha de cambios del status
	\item Ultima fecha de acceso
\end{itemize}

\paragraph{} Para obtener la informacion del i-nodo utilizamos la estructura stat que mediante la funcion  $int$ $stat (const char *_path, struct stat *_buf)$ a la cual le pasamos la ruta completa del archivo y una struc stat nos cargara en la structura todo la informacion del i-nodo del archivo. La estructura stat es la que nos provee minix para obtener informacion de un i-nodo y se encuentra en el directorio $ /usr/include/sys$. A continuacion mostramos la definicion de la estructura y las funciones que provee.

\begin{scriptsize} 
\begin{verbatimtab} 

struct stat {
  dev_t st_dev;			/* major/minor device number */
  ino_t st_ino;			/* i-node number */
  mode_t st_mode;		/* file mode, protection bits, etc. */
  short int st_nlink;		/* # links; TEMPORARY HACK: should be nlink_t*/
  uid_t st_uid;			/* uid of the file's owner */
  short int st_gid;		/* gid; TEMPORARY HACK: should be gid_t */
  dev_t st_rdev;
  off_t st_size;		/* file size */
  time_t st_atime;		/* time of last access */
  time_t st_mtime;		/* time of last data modification */
  time_t st_ctime;		/* time of last file status change */
};

/* Function Prototypes. */

_PROTOTYPE( int chmod, (const char *_path, Mode_t _mode)		);
_PROTOTYPE( int fstat, (int _fildes, struct stat *_buf)			);
_PROTOTYPE( int mkdir, (const char *_path, Mode_t _mode)		);
_PROTOTYPE( int mkfifo, (const char *_path, Mode_t _mode)		);
_PROTOTYPE( int stat, (const char *_path, struct stat *_buf)		);
_PROTOTYPE( mode_t umask, (Mode_t _cmask)				);

\end{verbatimtab} 
\end{scriptsize} 
 
 
\paragraph{} Para verificar que el archivo exista, primero pensamos en abrir el archivo pero el problema es que siempre estariamos modificando la ultima fecha de acceso, entonces luego se nos ocurrio crear una estructura stat en la cual seteamos el numero de inodo en -1, despues se llama a la funcion  $int$ $stat (const char *_path, struct stat *_buf)$, de existir el archivo nos modificara la estructura stat y nos cargara la informacion del i-nodo. Si una vez llamado a este metodo el numero de i-nodo sigue siendo -1 entonces el archivo no existe y mostraremos el siguiente mensaje de error ''Error: El archivo pasado como paramtero no existe''. Si el archivo existe entonces nostramos por consola toda la informacion del i-nodo. 

\paragraph{} Nos encontramos con un problema a la hora de imprimir la fecha ya que c no nos provee un print para fechas. Para resolverlo creamos el metodo formatoFecha que nos permite imprimir con el formato $YYYY-MM-DD$ $HH:MM:SS$. Este metodo se encuentra en el archivo $datosINodo.c$.


\paragraph{} A continuacion la implemetacion del m\'etodo $datosINodo.c$

\begin{scriptsize} 
\begin{verbatimtab} 

int main( int argc, char** argv)
{

	char cmd[4096]; 	
	
	
	if( (argc <= 1) || (argc >2))
	{
	     	printf("%s\n", "Error: el formato de entrada es ./datosINodo $HOME/nombreArchivo");	
	
	}
	else
	{
		struct stat estr;

		estr.st_ino=65535;
		stat(argv[1],&estr);
		
		if(estr.st_ino==65535) /*seteamos el ino en -1*/	
		{
			printf("%s\n","Error: El archivo pasado como paramtero no existe");
		}	
		
		else {
			printf("Ruta completa del archivo:%s\n",argv[1]);
			printf("Numero de dispositivo: %u\n",estr.st_dev);
			printf("Numero de i-nodo: %u\n",estr.st_ino);
			printf("Cantidad de links: %u\n",estr.st_nlink);
			printf("ID del propietario: %u\n",estr.st_uid);
			printf("ID del grupo del propietario: %u\n",estr.st_gid);
			printf("Tamanio del archivo: %u\n",estr.st_size);


			printf("Tipo de archivo:");	
			if(S_ISDIR(estr.st_mode)) {
				printf("Directorio");
			}
			if(S_ISCHR(estr.st_mode)){ 
				printf("especialdecaracteres");
			}
			if(S_ISBLK(estr.st_mode)){
				printf("especialdebloques");
			}	
			if(S_ISFIFO(estr.st_mode)){
				printf("archivofifo");
			}
			if(S_ISREG(estr.st_mode)){
				printf("regular");
			}

	
			printf("\nPermisos\n");
			printf("\t Para el propietario:");
			if( estr.st_mode & S_IRUSR ){
				printf("r");
			}
			if( estr.st_mode & S_IWUSR ){
				printf("w");
			}
			if( estr.st_mode & S_IXUSR ){
				printf("x");
			}

	
			printf("\n");
			printf("\t Para el grupo:");

			if( estr.st_mode & S_IRGRP ){
				printf("r");
			}
			if( estr.st_mode & S_IWGRP ){
				printf("w");
			}
			if( estr.st_mode & S_IXGRP ){
				printf("x");
			}


			printf("\n");
			printf("\t Para otros:");
			if( estr.st_mode & S_IROTH ){
				printf("r");
			}
			if( estr.st_mode & S_IWOTH ){
				printf("w");
			}
			if( estr.st_mode & S_IXOTH ){
				printf("x");
			}

	
			printf("\n");
			printf("Ultima fecha modificacion:");
			formatoFecha(&(estr.st_mtime));
	
			printf("Fecha de cambios del status:");
			formatoFecha(&(estr.st_ctime));
	
			printf("Ultima fecha de acceso:");
			formatoFecha(&(estr.st_atime));
		}
		
	}
	return 0;
}

\end{verbatimtab} 
\end{scriptsize} 

\subsection{Compilacion}

\paragraph{} Para generar el archivo ejecutable de $ datosINodo.c$ se debe ejecutar el archivo $compex$ que se encuentra en el mismo directorio escribiendo la siguiente linea $./compex$ generando asi el archivo ejecutable con el nombre $datosINodo$. 
 
\subsection{pruebas}

\subsubsection{Prueba1}


\begin{enumerate}
	\item Creamos un archivo $prueba1$ en el directorio $/usr/tp/15$. Luego ejecutamos $./datosInodo$ $/usr/tp/15/prueba1$ y obtenemos la siguinte informacion:

\begin{scriptsize} 
\begin{verbatimtab} 
Ruta completa del archivo:/usr/tp/15/prueba1
Numero de dispositivo: 770
Numero de i-nodo: 3409
Cantidad de links: 1
ID del propietario: 0
ID del grupo del propietario: 0
Tamanio del archivo: 43
Tipo de archivo:regular
Permisos
	 Para el propietario:rw
	 Para el grupo:r
	 Para otros:r
Ultima fecha modificacion:Sat 2009-10-03 19:09:58 MET
Fecha de cambios del status:Sat 2009-10-03 19:09:58 MET
Ultima fecha de acceso:Sat 2009-10-03 19:09:58 MET
\end{verbatimtab} 
\end{scriptsize} 


\item Luego hacemos un $chmod 777 /usr/tp/15/prueba1$ y nuevamente ejecutamos $./datosInodo$ $/usr/tp/15/prueba1$ y obtenemos la siguinte informacion:
\begin{scriptsize} 
\begin{verbatimtab} 
Ruta completa del archivo:/usr/tp/15/prueba1
Numero de dispositivo: 770
Numero de i-nodo: 3409
Cantidad de links: 1
ID del propietario: 0
ID del grupo del propietario: 0
Tamanio del archivo: 43
Tipo de archivo:regular
Permisos
	 Para el propietario:rwx
	 Para el grupo:rwx
	 Para otros:rwx
Ultima fecha modificacion:Sat 2009-10-03 19:09:58 MET
Fecha de cambios del status:Sat 2009-10-03 19:15:07 MET
Ultima fecha de acceso:Sat 2009-10-03 19:09:58 MET
\end{verbatimtab} 
\end{scriptsize} 


\paragraph{} Se puede observar que se modifico ademas de los permisos, se modifico tambien la fecha de cambio de status del archivo.

\item Ahora accedemos al archivo pero no lo modificamos y obtenemos la siguiente informacion:
\begin{scriptsize} 
\begin{verbatimtab} 
Ruta completa del archivo:/usr/tp/15/prueba1
Numero de dispositivo: 770
Numero de i-nodo: 3409
Cantidad de links: 1
ID del propietario: 0
ID del grupo del propietario: 0
Tamanio del archivo: 43
Tipo de archivo:regular
Permisos
	 Para el propietario:rwx
	 Para el grupo:rwx
	 Para otros:rwx
Ultima fecha modificacion:Sat 2009-10-03 19:09:58 MET
Fecha de cambios del status:Sat 2009-10-03 19:15:07 MET
Ultima fecha de acceso:Sat 2009-10-03 19:18:33 MET
\end{verbatimtab} 
\end{scriptsize} 

\item Ahora accemos al archivo lo modificamos y guardamos los cambios y obtenemos la siguiente informacion:
\begin{scriptsize} 
\begin{verbatimtab} 
Ruta completa del archivo:/usr/tp/15/prueba1
Numero de dispositivo: 770
Numero de i-nodo: 3409
Cantidad de links: 1
ID del propietario: 0
ID del grupo del propietario: 0
Tamanio del archivo: 43
Tipo de archivo:regular
Permisos
	 Para el propietario:rwx
	 Para el grupo:rwx
	 Para otros:rwx
Ultima fecha modificacion:Sat 2009-10-03 19:20:47 MET
Fecha de cambios del status:Sat 2009-10-03 19:20:47 MET
Ultima fecha de acceso:Sat 2009-10-03 19:20:47 MET
\end{verbatimtab} 
\end{scriptsize} 

\end{enumerate}

\subsubsection{Prueba2}

\paragraph{} Ahora realizamos una prueba con el archivo $stat.h$ que no creamos nosotros, ejecutamos $./datosINodo$ $/usr/include/sys/stat.h$ y obtenemos la siguiente informaci\'on:

\begin{scriptsize} 
\begin{verbatimtab} 
Ruta completa del archivo:/usr/include/sys/stat.h
Numero de dispositivo: 770
Numero de i-nodo: 450
Cantidad de links: 1
ID del propietario: 2
ID del grupo del propietario: 0
Tamanio del archivo: 3012
Tipo de archivo:regular
Permisos
	 Para el propietario:rw
	 Para el grupo:r
	 Para otros:r
Ultima fecha modificacion:Tue 1996-10-01 13:00:00 MET
Fecha de cambios del status:Sun 2005-03-13 23:15:11 MET
Ultima fecha de acceso:Sat 2009-10-03 18:51:51 MET
\end{verbatimtab} 
\end{scriptsize} 



